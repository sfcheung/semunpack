[{"path":"https://sfcheung.github.io/semunpack/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shu Fai Cheung. Author, maintainer.","code":""},{"path":"https://sfcheung.github.io/semunpack/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheung S (2022). semunpack: Functions Learning Teaching Structural Equation Modeling. R package version 0.0.1.9003, https://sfcheung.github.io/semunpack/.","code":"@Manual{,   title = {semunpack: Functions for Learning and Teaching Structural Equation Modeling},   author = {Shu Fai Cheung},   year = {2022},   note = {R package version 0.0.1.9003},   url = {https://sfcheung.github.io/semunpack/}, }"},{"path":"https://sfcheung.github.io/semunpack/index.html","id":"semunpack-learn-sem-analysis","dir":"","previous_headings":"","what":"Functions for Learning and Teaching Structural Equation Modeling","title":"Functions for Learning and Teaching Structural Equation Modeling","text":"package includes functions learning teaching structural equation modeling. “unpacks” things inside SEM analysis. information package, please visit GitHub page: https://sfcheung.github.io/semunpack/","code":""},{"path":"https://sfcheung.github.io/semunpack/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for Learning and Teaching Structural Equation Modeling","text":"Stable release versions package can downloaded : https://github.com/sfcheung/semunpack/releases latest developmental version package can installed remotes::install_github:","code":"remotes::install_github(\"sfcheung/semunpack\")"},{"path":"https://sfcheung.github.io/semunpack/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Functions for Learning and Teaching Structural Equation Modeling","text":"suggestions found bugs, please feel feel open GitHub issue. Thanks.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate the Matrices of a Lavaan Model — annotate_matrices","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"Label elements model matrices lavaan model.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"","code":"annotate_matrices(fit)  # S3 method for annotate_matrices print(x, ...)"},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"fit output lavaan::lavaan() wrappers, lavaan::cfa() lavaan::sem(). x 'annotate_matrices'-class object. output annotate_matrices(). ... Optional arguments. passed default print method.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"returns annotate_matrices-class object, list model matrices, elements annotated: parameter free, represented \"lhs-op-rhs\" according parameter estimate data frame. parameter fixed appears parameter table, represented \"(lhs-op-rhs = x)\", x value fixed . parameter fixed zero parameter table, represented 0.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"function annotates model matrices lavaan class object. function used analysis. learning tool, learners understand relation model matrices model parameters. currently supports single-level single-group model .","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"print: print method output annotate_matrices()","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/annotate_matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate the Matrices of a Lavaan Model — annotate_matrices","text":"","code":"# Adapted from https://lavaan.ugent.be/tutorial/cfa.html  library(lavaan) #> This is lavaan 0.6-12 #> lavaan is FREE software! Please report any bugs. HS.model <- ' visual  =~ x1 + x2 + x3 textual =~ x4 + x5 + x6 speed   =~ x7 + x8 + x9 ' fit_cfa <- cfa(HS.model,                data = HolzingerSwineford1939) annotate_matrices(fit_cfa) #> $lambda #>              visual           textual           speed #> x1 (visual=~x1 = 1)                 0               0 #> x2       visual=~x2                 0               0 #> x3       visual=~x3                 0               0 #> x4                0 (textual=~x4 = 1)               0 #> x5                0       textual=~x5               0 #> x6                0       textual=~x6               0 #> x7                0                 0 (speed=~x7 = 1) #> x8                0                 0       speed=~x8 #> x9                0                 0       speed=~x9 #>  #> $theta #>        x1     x2     x3     x4     x5     x6     x7     x8     x9 #> x1 x1~~x1      0      0      0      0      0      0      0      0 #> x2      0 x2~~x2      0      0      0      0      0      0      0 #> x3      0      0 x3~~x3      0      0      0      0      0      0 #> x4      0      0      0 x4~~x4      0      0      0      0      0 #> x5      0      0      0      0 x5~~x5      0      0      0      0 #> x6      0      0      0      0      0 x6~~x6      0      0      0 #> x7      0      0      0      0      0      0 x7~~x7      0      0 #> x8      0      0      0      0      0      0      0 x8~~x8      0 #> x9      0      0      0      0      0      0      0      0 x9~~x9 #>  #> $psi #>                  visual          textual          speed #> visual   visual~~visual  visual~~textual  visual~~speed #> textual visual~~textual textual~~textual textual~~speed #> speed     visual~~speed   textual~~speed   speed~~speed #>"},{"path":"https://sfcheung.github.io/semunpack/reference/plot_models_fm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","title":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","text":"Plot models graph Chi-square model degrees freedom, lines equal fit measures.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/plot_models_fm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","text":"","code":"plot_models_fm(   ...,   fit_measure = c(\"cfi\", \"tli\", \"rmsea\"),   fit_values,   line_size = 1,   label_size = 8,   point_size = 5,   position_dodge = 0.5,   include_model_values = FALSE,   include_baseline = FALSE )"},{"path":"https://sfcheung.github.io/semunpack/reference/plot_models_fm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","text":"... lavaan::lavaan objects plotted. Can also named list lavaan::lavaan objects. list, must named names used plot. fit_measure length-one character vector fit measures use plot lines. support \"cfi\" (default), \"tli\", \"rmsea\". fit_values numeric vector values fit measure used plot lines. default values c(.90, .95) \"cfi\" \"tli\", c(.00, .02, .05, .08) \"rmsea\". line_size size lines. Default 1. label_size size model names. Default 8. point_size size point representing model. Default 2. position_dodge Offsetting label model point. Default .5. Used ggrepel::geom_label_repel(). include_model_values TRUE, values models fit_measure added fit_values. Default FALSE. include_baseline TRUE, baseline model included plot. Default FALSE.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/plot_models_fm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","text":"Return ggplot2::ggplot() output can modified.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/plot_models_fm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","text":"function plots models based model chi-squares model degrees freedoms.can also add lines chi-square-df combination equal values selected fit measures. Currently supports CFI, TLI, RMSEA.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semunpack/reference/plot_models_fm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/plot_models_fm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Models on a Model-Chi-Squares-vs-Model-Dfs Graph — plot_models_fm","text":"","code":"library(lavaan)  # From the help page of modificationIndices  HS.model <- '  visual  =~ x1 + x2 + x3  textual =~ x4 + x5 + x6  speed   =~ x7 + x8 + x9 '  fit <- cfa(HS.model, data = HolzingerSwineford1939) modindices(fit, sort = TRUE, op = \"=~\") #>        lhs op rhs     mi    epc sepc.lv sepc.all sepc.nox #> 30  visual =~  x9 36.411  0.577   0.519    0.515    0.515 #> 28  visual =~  x7 18.631 -0.422  -0.380   -0.349   -0.349 #> 33 textual =~  x3  9.151 -0.272  -0.269   -0.238   -0.238 #> 31 textual =~  x1  8.903  0.350   0.347    0.297    0.297 #> 26  visual =~  x5  7.441 -0.210  -0.189   -0.147   -0.147 #> 36 textual =~  x9  4.796  0.138   0.137    0.136    0.136 #> 29  visual =~  x8  4.295 -0.210  -0.189   -0.187   -0.187 #> 35 textual =~  x8  3.359 -0.121  -0.120   -0.118   -0.118 #> 27  visual =~  x6  2.843  0.111   0.100    0.092    0.092 #> 38   speed =~  x2  1.580 -0.198  -0.123   -0.105   -0.105 #> 25  visual =~  x4  1.211  0.077   0.069    0.059    0.059 #> 39   speed =~  x3  0.716  0.136   0.084    0.075    0.075 #> 42   speed =~  x6  0.273  0.044   0.027    0.025    0.025 #> 41   speed =~  x5  0.201 -0.044  -0.027   -0.021   -0.021 #> 34 textual =~  x7  0.098 -0.021  -0.021   -0.019   -0.019 #> 32 textual =~  x2  0.017 -0.011  -0.011   -0.010   -0.010 #> 37   speed =~  x1  0.014  0.024   0.015    0.013    0.013 #> 40   speed =~  x4  0.003 -0.005  -0.003   -0.003   -0.003  fit2 <- update(fit, add = \"visual =~ x9\") fit3 <- update(fit, add = \"textual =~ x3\\nvisual =~ x7\")  models <- list(Initial = fit,                Model_2 = fit2,                Model_3 = fit3) fit_cfi <- sapply(models, fitMeasures, fit.measures = \"cfi\") fit_tli <- sapply(models, fitMeasures, fit.measures = \"tli\") fit_rmsea <- sapply(models, fitMeasures, fit.measures = \"rmsea\")  # Supply the models as arguments plot_models_fm(fit, fit2, fit3)   # Plot lines for selected values on a fit measure (CFI by default) plot_models_fm(fit, fit2, fit3, fit_values = c(.90, .925, .95, fit_cfi))   # Plot the models' values on the fit measures plot_models_fm(fit, fit2, fit3, include_model_values = TRUE)   # Supply the models as a named list plot_models_fm(list(A = fit, B = fit2, C = fit3),                fit_values = c(.90, .925, .95))   # Plot the models, fit measure set to TLI plot_models_fm(fit, fit2, fit3, fit_measure = \"tli\")  plot_models_fm(fit, fit2, fit3, fit_measure = \"tli\",                fit_values = c(.90, .925, .95, fit_tli))  plot_models_fm(fit, fit2, fit3, fit_measure = \"tli\",                include_model_values = TRUE)   # Plot the models, fit measure set to RMSEA plot_models_fm(fit, fit2, fit3, fit_measure = \"rmsea\")  plot_models_fm(fit, fit2, fit3, fit_measure = \"rmsea\",                include_model_values = TRUE)"},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Record the Minimization History — record_history","title":"Record the Minimization History — record_history","text":"Record minimization history model fitted lavaan::lavaan() wrappers (e.g., lavaan::sem() lavaan::cfa()).","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record the Minimization History — record_history","text":"","code":"record_history(fit)  # S3 method for fit_history plot(x, params, last_n = -1, orientation = c(\"horizontal\", \"vertical\"), ...)  # S3 method for fit_history print(x, n_iterations = 10, digits = 3, ...)"},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record the Minimization History — record_history","text":"fit output lavaan::lavaan() wrappers (e.g., lavaan::cfa() lavaan::sem()). x fit_history class object, output record_history(). params names parameters plotted. Must names one columns x. last_n lass n iterations plotted. Default -1, plotting iterations. orientation orientation plot. Either \"horizontal\" (default) \"vertical\". ... Optional arguments. passed print method data frame. n_iterations number iterations print. Default 10, printing first 10 iterations (iterations, number iterations less 10). digits number digits displayed. Default 3.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record the Minimization History — record_history","text":"fit_history-class object plot method.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Record the Minimization History — record_history","text":"records minimization history model fitted lavaan::lavaan() wrappers (e.g., lavaan::sem() lavaan::cfa()). recorded history can plotted displayed, visualizing understanding estimates free parameters found. refit model update method lavaan::lavaan, setting se = \"none\" test = \"standard\" impact effect minimization process.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Record the Minimization History — record_history","text":"plot: plot method output record_history(). print: print method output record_history().","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Record the Minimization History — record_history","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/record_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record the Minimization History — record_history","text":"","code":"# Adapted from the example for CFA in lavaan::cfa(). # Using only two of the factors library(lavaan) HS.model <- ' visual  =~ x1 + x2 + x3 textual =~ x4 + x5 + x6 ' fit <- cfa(HS.model, data = HolzingerSwineford1939) # Refit the model with the history recorded fit_h <- record_history(fit) #> Error: $ operator not defined for this S4 class fit_h #> Error in eval(expr, envir, enclos): object 'fit_h' not found plot(fit_h, params = c(\"visual=~x2\", \"visual=~x3\",                        \"visual~~textual\"),             last_n = 10) #> Error in plot(fit_h, params = c(\"visual=~x2\", \"visual=~x3\", \"visual~~textual\"),     last_n = 10): object 'fit_h' not found plot(fit_h, params = c(\"visual=~x2\", \"visual=~x3\",                        \"visual~~textual\"),             last_n = 10,             orientation = \"vertical\") #> Error in plot(fit_h, params = c(\"visual=~x2\", \"visual=~x3\", \"visual~~textual\"),     last_n = 10, orientation = \"vertical\"): object 'fit_h' not found"},{"path":"https://sfcheung.github.io/semunpack/reference/semunpack-package.html","id":null,"dir":"Reference","previous_headings":"","what":"semunpack: Functions for Learning and Teaching Structural Equation Modeling — semunpack-package","title":"semunpack: Functions for Learning and Teaching Structural Equation Modeling — semunpack-package","text":"collection functions learning teaching structural equations, computing model df, matching paths matrix elements, plotting estimation history.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semunpack/reference/semunpack-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"semunpack: Functions for Learning and Teaching Structural Equation Modeling — semunpack-package","text":"Maintainer: Shu Fai Cheung shufai.cheung@gmail.com (ORCID)","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize How CFI and TLI are Computed — show_cfi","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"Show CFI TLI computed using graph model chi-square vs. model degrees freedom.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"","code":"show_cfi(fit, ...)  show_tli(fit, ...)  show_ifi(fit, fit_measures = c(\"cfi\", \"tli\"), test = c(\"standard\"))"},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"fit output lavaan::lavaan() wrappers (e.g., lavaan::cfa() lavaan::sem()) ... Arguments passed show_ifi(). fit_measures fit measures plotted. Acceptable values \"cfi\" \"tli\". test type model chi-square test. corresponds test argument lavaan::lavaan() wrappers. \"standard\" supported now.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"output ggplot2::ggplot().","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"function receives output lavaan::lavaan() wrappers (e.g., lavaan::cfa() lavaan::sem()) illustrates CFI computed.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"show_cfi: wrapper show_ifi() fit_measures = \"cfi\". show_tli: wrapper show_ifi() fit_measures = \"tli\".","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_ifi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize How CFI and TLI are Computed — show_cfi","text":"","code":"library(lavaan)  # From the help page of lavaan::cfa().  HS.model <- ' visual  =~ x1 + x2 + x3 textual =~ x4 + x5 + x6 speed   =~ x7 + x8 + x9 ' fit <- cfa(HS.model, data = HolzingerSwineford1939)  # By default show how CFI is computed show_ifi(fit)   # Show how TLI is computed show_ifi(fit, fit_measures = \"tli\")   # Wrappers show_cfi(fit)  show_tli(fit)"},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Major Options in an Output of 'lavaan' — show_options","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"Display values major options model fitted lavaan::lavaan() wrappers (e.g., lavaan::sem lavaan::cfa()).","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"","code":"show_options(fit)  # S3 method for show_options print(x, ...)"},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"fit output lavaan::lavaan() wrappers (e.g., lavaan::cfa() lavaan::sem()) x output show_options(). ... Additional arguments. Ignored.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"show_options-class object print method format output.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"extracts values major options output lavaan::lavaan() wrappers (e.g., lavaan::sem lavaan::cfa(). checks actual values, call used. useful understanding prepackaged estimator ML, MLM, MLR set options. supports following options: Estimator (estimator) Standard error (se) Model chi-square test(s) (test) Missing data method (missing) Information matrix used computing standard errors (information) Information matrix used computing model chi-square (information) Whether mean structure included.","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"print: print method output show_options().","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/semunpack/reference/show_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show Major Options in an Output of 'lavaan' — show_options","text":"","code":"library(lavaan)  # From the help page of lavaan::cfa().  HS.model <- ' visual  =~ x1 + x2 + x3 textual =~ x4 + x5 + x6 speed   =~ x7 + x8 + x9 ' fit <- cfa(HS.model, data = HolzingerSwineford1939)  tmp <- show_options(fit) tmp #>  Options                             Call    Actual   #>  Estimator(s)                        default ML       #>  Standard Error                      default standard #>  Model Test Statistic(s)             default standard #>  Missing Data                        default listwise #>  Information Matrix (for SE)         default expected #>  Information Matrix (for Model Test) default expected #>  Mean Structure                      default No        fit <- cfa(HS.model, data = HolzingerSwineford1939, estimator = \"MLR\") show_options(fit) #>  Options                             Call    Actual             #>  Estimator(s)                        MLR     ML                 #>  Standard Error                      default robust.huber.white #>  Model Test Statistic(s)             default yuan.bentler.mplus #>  Missing Data                        default listwise           #>  Information Matrix (for SE)         default observed           #>  Information Matrix (for Model Test) default observed           #>  Mean Structure                      default No                 fit <- cfa(HS.model, data = HolzingerSwineford1939, estimator = \"MLM\") show_options(fit) #>  Options                             Call    Actual          #>  Estimator(s)                        MLM     ML              #>  Standard Error                      default robust.sem      #>  Model Test Statistic(s)             default satorra.bentler #>  Missing Data                        default listwise        #>  Information Matrix (for SE)         default expected        #>  Information Matrix (for Model Test) default expected        #>  Mean Structure                      default No"},{"path":"https://sfcheung.github.io/semunpack/news/index.html","id":"semunpack-0019000","dir":"Changelog","previous_headings":"","what":"semunpack 0.0.1.9000+","title":"semunpack 0.0.1.9000+","text":"Drafted show_ifi(). Work--progress version. Drafted plot_models_fm(). Drafted annotate_matrices().","code":""}]
